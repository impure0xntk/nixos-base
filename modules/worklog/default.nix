# Do as following:
#  - create ~/.wakatime.cfg as the following config: (see wakatime top page)
#    [settings]
#    api_key = <key generated by webui>
#    api_url = <url(http://localhost:(forward port))>/api/v1/users/current/heartbeats.bulk
#  - install each editors plugins.
#    vscode: WakaTime(WakaTime.vscode-wakatime)
#    chrome: WakaTime(jnbbnacmeggbgdjgaoojpmhdlkkpblgi)
{ config, lib, ... }:
let
  cfg = config.my.system.worklog;
in {
  options.my.system.worklog = {
    enable = lib.mkEnableOption "Whether to enable worklog.";
    port = lib.mkOption {
      type = lib.types.port;
      description = "Port for worklog server.";
      default = 3000;
    };
    host = lib.mkOption {
      type = lib.types.str;
      description = "Host for worklog sever. Do not change.";
      default = config.networking.hostName;
    };
  };

  config = lib.mkIf cfg.enable {
    boot.enableContainers = true;
    containers.wakapi = {
      autoStart = true;

      config = {config, pkgs, lib, ...}: {
        imports = [ ../core/minimal.nix ];
        system.stateVersion = config.system.nixos.release;

        services.journald.extraConfig = ''
          SystemMaxUse=100M
        '';

        services.wakapi = {
          enable = true;
          package = pkgs.wakapi;
          database = {
            dialect = "sqlite3";
            createLocally = lib.mkForce false;
          };
          passwordSalt = "WGgYPNa4B4sfgJK3p61TYgWkx44rjTUY"; # wakapi github sample. This is insecure
          settings = {
            server.port = cfg.port;
            security = {
              invite_codes = false;
              disable_frontpage = true;
            };
            mail.enable = false;
          };
        };
        # Workaround: https://github.com/muety/wakapi/issues/731
        # https://github.com/NotAShelf/nixpkgs/commit/3204e04a80ed61481315c1c0cdddfcdde116ed85
        systemd.services.wakapi.serviceConfig.WorkingDirectory = "/var/lib/wakapi";
        systemd.services.wakapi.serviceConfig.RuntimeDirectory = "wakapi";
      };
    };
  };
}
